{"ast":null,"code":"var _jsxFileName = \"/home/karnan/WebProjects/React/meme-generator/src/component/MemeGenerator.js\";\nimport React, { Component } from \"react\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"https://i.imgflip.com/30b1gx.jpg\",\n      allMemeImage: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImage: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"classMeme \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"memeForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"GEN\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"meme\",\n      src: this.state.randomImage,\n      alt: \"random\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"topText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"bottomText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.state.bottomText), console.log(this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/home/karnan/WebProjects/React/meme-generator/src/component/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImage","allMemeImage","handleChange","bind","handleSubmit","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","preventDefault","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"https://i.imgflip.com/30b1gx.jpg\",\n      allMemeImage: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((response) => {\n        const { memes } = response.data;\n        this.setState({ allMemeImage: memes });\n      });\n  }\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div className=\"classMeme \">\n        <form className=\"memeForm\" onSubmit={this.handleSubmit}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"topText\"\n            placeholder=\"Top Text\"\n            value={this.state.topText}\n            onChange={this.handleChange}\n          />\n\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"bottomText\"\n            placeholder=\"Bottom Text\"\n            value={this.state.bottomText}\n            onChange={this.handleChange}\n          />\n          <br />\n          <button className=\"button\">GEN</button>\n        </form>\n        <div className=\"container\">\n          <img className=\"meme\" src={this.state.randomImage} alt=\"random\" />\n          <h2 className=\"topText\">{this.state.topText}</h2>\n          <h2 className=\"bottomText\">{this.state.bottomText}</h2>\n          {console.log(this.state.bottomText)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MemeGenerator;\n"]},"metadata":{},"sourceType":"module"}